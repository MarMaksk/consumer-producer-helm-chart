apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "marmarks-chart.producer.deployment.name" . }}
  labels:
    {{- include "marmarks-chart.labels" . | nindent 4 }}
    tier: producer
spec:
  replicas: {{ .Values.producer.deployment.replicas }}
  selector:
    matchLabels:
      {{- include "marmarks-chart.selectorLabels" . | nindent 6 }}
      tier: producer
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "marmarks-chart.selectorLabels" . | nindent 8 }}
        tier: producer
    spec:
      containers:
        - name: {{ include "marmarks-chart.producer.container.name" . }}
          image: "{{ .Values.producer.image.name }}:{{ .Values.producer.image.tag }}"
          imagePullPolicy: {{ .Values.producer.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "marmarks-chart.producerConfig.defaultName" . }}
            - secretRef:
                name: {{ include "marmarks-chart.producerSecrets.defaultName" . }}
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 3
          resources:
            {{- toYaml .Values.producer.container.resources | nindent 12 }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ include "marmarks-chart.producer.service.name" . }}
  labels:
    {{- include "marmarks-chart.labels" . | nindent 4 }}
    tier: producer
spec:
  ports:
    - port: {{ .Values.producer.service.port }}
      protocol: TCP
      targetPort: 8080
      name: http
  selector:
    {{- include "marmarks-chart.selectorLabels" . | nindent 4 }}
    tier: producer

